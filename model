# importing libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

# loading dataset
data = pd.read_csv('50_Startups.csv')

# separating independent and dependent variables
X = data.iloc[:, :-1].values
y = data.iloc[:, -1].values

# splitting dataset into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# creating regression models
linear_reg = LinearRegression()
ridge_reg = Ridge()
lasso_reg = Lasso()
elasticnet_reg = ElasticNet()
decision_tree_reg = DecisionTreeRegressor()
random_forest_reg = RandomForestRegressor()

# training the models
linear_reg.fit(X_train, y_train)
ridge_reg.fit(X_train, y_train)
lasso_reg.fit(X_train, y_train)
elasticnet_reg.fit(X_train, y_train)
decision_tree_reg.fit(X_train, y_train)
random_forest_reg.fit(X_train, y_train)

# predicting on the test set
linear_reg_pred = linear_reg.predict(X_test)
ridge_reg_pred = ridge_reg.predict(X_test)
lasso_reg_pred = lasso_reg.predict(X_test)
elasticnet_reg_pred = elasticnet_reg.predict(X_test)
decision_tree_reg_pred = decision_tree_reg.predict(X_test)
random_forest_reg_pred = random_forest_reg.predict(X_test)

# evaluating the models
linear_reg_mse = mean_squared_error(y_test, linear_reg_pred)
linear_reg_rmse = np.sqrt(linear_reg_mse)
linear_reg_mae = mean_absolute_error(y_test, linear_reg_pred)
linear_reg_r2 = r2_score(y_test, linear_reg_pred)

ridge_reg_mse = mean_squared_error(y_test, ridge_reg_pred)
ridge_reg_rmse = np.sqrt(ridge_reg_mse)
ridge_reg_mae = mean_absolute_error(y_test, ridge_reg_pred)
ridge_reg_r2 = r2_score(y_test, ridge_reg_pred)

lasso_reg_mse = mean_squared_error(y_test, lasso_reg_pred)
lasso_reg_rmse = np.sqrt(lasso_reg_mse)
lasso_reg_mae = mean_absolute_error(y_test, lasso_reg_pred)
lasso_reg_r2 = r2_score(y_test, lasso_reg_pred)

elasticnet_reg_mse = mean_squared_error(y_test, elasticnet_reg_pred)
elasticnet_reg_rmse = np.sqrt(elasticnet_reg_mse)
elasticnet_reg_mae = mean_absolute_error(y_test, elasticnet_reg_pred)
elasticnet_reg_r2 = r2_score(y_test, elasticnet_reg_pred)

decision_tree_reg_mse = mean_squared_error(y_test, decision_tree_reg_pred)
decision_tree_reg_rmse = np.sqrt(decision_tree_reg_mse)
decision_tree_reg_mae = mean_absolute_error(y_test, decision_tree_reg_pred)
decision_tree_reg_r2 = r2_score(y_test, decision_tree_reg_pred)

random_forest_reg_mse = mean_squared_error(y_test, random_forest_reg_pred)
random_forest_reg_rmse = np.sqrt(random_forest_reg_mse)
random_forest_reg_mae = mean_absolute_error(y_test, random_forest_reg_pred)
random_forest_reg_r2 = r2_score(y_test, random_forest_reg_pred)

print("Linear Regression:")
print("MSE:", linear_reg_mse)
print("RMSE:", linear_reg_rmse)
print("MAE:", linear_reg_mae)
print("R^2:", linear_reg_r2)
print()

print("Ridge Regression:")
print("MSE:", ridge_reg_mse)
print("RMSE:", ridge_reg_rmse)
print("MAE:", ridge_reg_mae)
print("R^2:", ridge_reg_r2)
print()

print("Lasso Regression:")
print("MSE:", lasso_reg_mse)
print("RMSE:", lasso_reg_rmse)
print("MAE:", lasso_reg_mae)
print("R^2:", lasso_reg_r2)
print()

print("ElasticNet Regression:")
print("MSE:", elasticnet_reg_mse)
print("RMSE:", elasticnet_reg_rmse)
print("MAE:", elasticnet_reg_mae)
print("R^2:", elasticnet_reg_r2)
print()

print("Decision Tree Regression:")
print("MSE:", decision_tree_reg_mse)
print("RMSE:", decision_tree_reg_rmse)
print("MAE:", decision_tree_reg_mae)
print("R^2:", decision_tree_reg_r2)
print()

print("Random Forest Regression:")
print("MSE:", random_forest_reg_mse)
print("RMSE:", random_forest_reg_rmse)
print("MAE:", random_forest_reg_mae)
print("R^2:", random_forest_reg_r2)
print()
